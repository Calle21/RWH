module clang

infix + -            => L6
      * / mod divmod => L7

Int (Int a) + (Int b) = ...
Int (Int a) - (Int b) = ...
Int (Int a) * (Int b) = ...
Int (Int a) / (Int b) = rec (Int n = 0, Int rem = a)
  if rem < b
    n
    else rec (n = n + 1, rem = a - b)

Int (Int a) mod (Int b) = rec (Int rem = a)
  if rem < b
    b
    else rec (rem = a - b)

(Int,Int) (Int a) divmod (Int b) = rec (Int n = 0, Int rem = a)
  if rem < b
    (n,rem)
    else rec (n = n - 1, rem = a - b)
